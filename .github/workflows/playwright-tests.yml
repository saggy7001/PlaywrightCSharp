name: Playwright Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ui-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Install Playwright CLI
        run: |
          cd UI.Tests
          dotnet tool install --global Microsoft.Playwright.CLI

      - name: Install Playwright Package
        run: |
          cd UI.Tests
          dotnet add package Microsoft.Playwright
      
      - name: Install Playwright Browsers
        run: |
          cd UI.Tests 
          xvfb-run --auto-servernum playwright install --with-deps

      - name: Restore and Build UI Tests
        run: |
          cd UI.Tests
          dotnet restore
          dotnet build --configuration Release --no-restore
      
      - name: Get Commit ID
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Run UI Tests
        run: |
          cd UI.Tests
          xvfb-run --auto-servernum dotnet test --configuration Release --no-build --logger "trx;LogFileName=ui_tests_results_${{ env.COMMIT_ID }}.trx"
      
      - name: Upload UI Test Results
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results-${{ env.COMMIT_ID }}
          path: UI.Tests/TestResults/ui_tests_results_${{ env.COMMIT_ID }}.trx

  api-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Install Playwright CLI
        run: |
          cd API.Tests 
          dotnet tool install --global Microsoft.Playwright.CLI

      - name: Install Playwright Package
        run: |
          cd API.Tests  
          dotnet add package Microsoft.Playwright
      
      - name: Restore and Build API Tests
        run: |
          cd API.Tests
          dotnet restore
          dotnet build --configuration Release --no-restore
      
      - name: Get Commit ID
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Run API Tests
        run: |
          cd API.Tests
          dotnet test --configuration Release --no-build --logger "trx;LogFileName=api_tests_results_${{ env.COMMIT_ID }}.trx"
      
      - name: Upload API Test Results
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results-${{ env.COMMIT_ID }}
          path: API.Tests/TestResults/api_tests_results_${{ env.COMMIT_ID }}.trx
